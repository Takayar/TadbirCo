// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tadbir.MMP.Models.Context;

namespace Tadbir.MMP.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tadbir.MMP.Models.Entities.InsuranceType", b =>
                {
                    b.Property<int>("InsuranceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("InsuranceRate")
                        .HasColumnType("float");

                    b.Property<int>("MaxInsuranceCoverage")
                        .HasColumnType("int");

                    b.Property<int>("MinInsuranceCoverage")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InsuranceTypeId");

                    b.ToTable("InsuranceTypes");

                    b.HasData(
                        new
                        {
                            InsuranceTypeId = 1,
                            InsuranceRate = 0.0041999999999999997,
                            MaxInsuranceCoverage = 400000000,
                            MinInsuranceCoverage = 4000,
                            Name = "دندان پزشکی"
                        },
                        new
                        {
                            InsuranceTypeId = 2,
                            InsuranceRate = 0.0051999999999999998,
                            MaxInsuranceCoverage = 500000000,
                            MinInsuranceCoverage = 5000,
                            Name = "جراحی"
                        },
                        new
                        {
                            InsuranceTypeId = 3,
                            InsuranceRate = 0.0050000000000000001,
                            MaxInsuranceCoverage = 200000000,
                            MinInsuranceCoverage = 2000,
                            Name = "بستری"
                        });
                });

            modelBuilder.Entity("Tadbir.MMP.Models.Entities.ReqDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InsuranceTypeId")
                        .HasColumnType("int");

                    b.Property<double>("NetInsurancePremiumItem")
                        .HasColumnType("float");

                    b.Property<int>("RequestInsuranceCoverage")
                        .HasColumnType("int");

                    b.Property<int>("ToDoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ToDoId");

                    b.ToTable("ReqDetails");
                });

            modelBuilder.Entity("Tadbir.MMP.Models.Entities.ToDo", b =>
                {
                    b.Property<int>("ToDoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<double>("NetInsurancePremium")
                        .HasColumnType("float");

                    b.Property<string>("RequestSubject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ToDoId");

                    b.ToTable("ToDos");
                });

            modelBuilder.Entity("Tadbir.MMP.Models.Entities.ReqDetails", b =>
                {
                    b.HasOne("Tadbir.MMP.Models.Entities.ToDo", null)
                        .WithMany("ReqDetails")
                        .HasForeignKey("ToDoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tadbir.MMP.Models.Entities.ToDo", b =>
                {
                    b.Navigation("ReqDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
